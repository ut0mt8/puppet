#!/usr/bin/env bash
#
# Check_MK Bacula Plugin
#

INTERVAL="48"

#
# STATUS_FRESHNESS - Find clients with no backup within $INTERVAL
#
status_freshness()
{
    unset DETAIL

    # Find count(clientid) for clients which weren't backed up within $INTERVAL
    FRESHNESS_SQL="SELECT COUNT(clientid) FROM Client WHERE clientid NOT IN
               (SELECT clientid FROM Job WHERE endtime > (NOW() - INTERVAL $INTERVAL hour )
               AND JOBSTATUS = 'T');"
    
    # Find the name of these clients.
    FRESHNESS_DETAIL_SQL="SELECT name FROM Client WHERE clientid NOT IN 
               (SELECT clientid FROM Job WHERE endtime > (NOW() - INTERVAL $INTERVAL hour )
               AND JOBSTATUS = 'T');"

    count=`echo $FRESHNESS_SQL|$CMD`

    if [[ $count == "" ]]; then
        echo "freshness E 'Unable to read output from query'"
        return
    fi

    if [[ $count -ne 0 ]]; then
        DETAIL=`echo $FRESHNESS_DETAIL_SQL|$CMD|tr '\n' ','`
    fi

    echo "freshness $count $INTERVAL '$DETAIL'"
}



#
# STATUS_FULLBACKUPS - Find clients without a full backup.
#
status_fullbackups()
{
    unset DETAIL

    # Finds all clients which have no full backup.
    FULLBACKUPS_SQL="SELECT COUNT(clientid) FROM Client WHERE clientid NOT IN 
        (SELECT Client.clientid FROM Client,Job WHERE Job.level = 'F' AND 
        (Job.jobstatus='T' OR Job.jobstatus='e') AND 
        Job.clientid = Client.clientid);"
    
    # Find the name of these clients.
    FULLBACKUPS_DETAIL_SQL="SELECT name FROM Client WHERE clientid NOT IN 
        (SELECT Client.clientid FROM Client,Job WHERE job.level = 'F' AND 
        (Job.jobstatus='T' OR Job.jobstatus='e') AND 
        Job.clientid = Client.clientid);"

    count=`echo $FULLBACKUPS_SQL|$CMD`

    if [[ $count == "" ]]; then
    	echo "fullbackups E 'Unable to read output from query'"
    	return
    fi

    if [[ $count -ne 0 ]]; then
        DETAIL=`echo $FULLBACKUPS_DETAIL_SQL|$CMD|tr '\n' ','`
    fi

    echo "fullbackups $count '$DETAIL'"
}




#
# STATUS_FULLBACKUPS_POOL - Find full backup media which is in the wrong pool.
#
status_fullbackups_pool()
{
    unset DETAIL

    # Find count(jobid) of all media which is used in Fullbackup jobs
    # which does not belong to the Fullbackup pool.
    FULLBACKUPS_POOL_SQL="SELECT count(DISTINCT j.jobid)
              FROM Job j, JobMedia jm, Media m, Pool p
              WHERE j.jobid=jm.jobid 
                              AND jm.mediaid=m.mediaid
                              AND m.poolid=p.poolid
                              AND p.name NOT like '%Full%'
                              AND j.level='F'
                              AND j.type='B'
                              AND j.jobstatus in ('T', 'e');"

    # Find the job names
    FULLBACKUPS_POOL_DETAIL_SQL="SELECT DISTINCT j.job
              FROM Job j, JobMedia jm, Media m, Pool p
              WHERE j.jobid=jm.jobid 
                              AND jm.mediaid=m.mediaid
                              AND m.poolid=p.poolid
                              AND p.name NOT like '%Full%'
                              AND j.level='F'
                              AND j.type='B'
                              AND j.jobstatus in ('T', 'e');"
    
    count=`echo $FULLBACKUPS_POOL_SQL|$CMD`

    if [[ $count == "" ]]; then
    echo "fullbackupspool E 'Unable to read output from query'"
    return
    fi

    if [[ $count -ne 0 ]] ; then
        DETAIL=`echo $FULLBACKUPS_POOL_DETAIL_SQL|$CMD|tr '\n' ','`
    fi

    echo "fullbackupspool $count '$DETAIL'"
}




#
# STATUS_ERROUNOS_VOLUMES - Detect Volumes with errors.
#
status_errounos_volumes()
{
    unset DETAIL

    ERRVOLS_SQL="SELECT COUNT(*)
                 FROM Media
                 WHERE (VolErrors>0) 
                     OR (VolStatus='Error')
                     OR (VolStatus='Disabled')"

    ERRVOLS_DETAIL_SQL="SELECT volumename
                 FROM Media
                 WHERE (VolErrors>0) 
                     OR (VolStatus='Error')
                     OR (VolStatus='Disabled')"

    count=`echo $ERRVOLS_SQL|$CMD`

    if [[ $count == "" ]]; then
    echo "errorvols E 'Unable to read output from query'"
    return
    fi

    if [[ $count -ne 0 ]] ; then
        DETAIL=`echo $ERRVOLS_DETAIL_SQL|$CMD|tr '\n' ','`
    fi

    echo "errorvols $count ${DETAIL}"

}
    

CMD="mysql -B -s -s -u bacula -pB4uv0DgB2sZUyWgzSRywWecrJpmj6mqNX3NNSCdGaYWFlkBzk6FesqB bacula"

echo "<<<bacula>>>"
status_freshness
status_fullbackups
status_fullbackups_pool
status_errounos_volumes

