#!/usr/bin/perl
#
use warnings;
use strict;

# apt-get install libnet-ldap-perl
# apt-get install libio-socket-ssl-perl
# pour la cnx en SSL
use Net::LDAP;
use Net::LDAP::Util qw(ldap_error_text);
# apt-get install libterm-readkey-perl
use Term::ReadKey;
use Digest::MD5  qw(md5 md5_hex md5_base64);
use Term::ANSIColor qw(:constants);
$Term::ANSIColor::AUTORESET = 1;

my %Config = (
LDAP_HOST=>"ldaps://ldap.priv",
LDAP_BASE=>"dc=company,dc=priv",
);

my $ldap = Net::LDAP->new($Config{LDAP_HOST}) or die "$@";
my $user = getlogin();
my $oldpassword = "";

sub readstdin() {
        $_ = <STDIN>;
        if(!$_) {
                print "\n";
                exit(0);
        } else {
                return $_;
        }
}

sub get_dn
{
	my $pass = shift;

	$ldap->bind ;    # an anonymous bind
        my $mesg = $ldap->search(
                               base   => $Config{LDAP_BASE},
                               filter => "(&(uid=${user})(objectClass=posixAccount))",
                               scope => 'sub',
                           );

        # How many entries were returned from the search
        my $num = $mesg->count;
        if($num != 1) {
		print STDERR "We found more than one user with the '$user' UID.\n";
                exit(1);
        }
	# get the DN of the current USER.
        my $dn = $mesg->entry(0)->dn();
	# unbind() is a bad idea.
	# $ldap->unbind;
	return $dn;
}

sub chk_oldpass
{
	my $u = get_dn;
	# we ask user for his old password, and try to bind with it.
	print YELLOW "(current) LDAP password:";
        # yes it is ugly
	ReadMode('noecho');
	my $p = ReadLine(0);
	ReadMode('normal');
        chomp($p);
        print "\n";
	my $result = $ldap->bind($u,password => $p);
	if ($result->code) {
		print "An error occurred (you probably entered a wrong password).\n";
		print ldap_error_text($result->code)."\n";
		exit(1);
	} else {
		$oldpassword = $p;
	}
}

sub ch_pass
{
	my $u = get_dn;

	# New pass: 1st time
	print GREEN "Enter new LDAP password:";
	ReadMode('noecho');
	my $p = ReadLine(0);
	ReadMode('normal');
        chomp($p);
        print "\n";

	# New pass: 2nd time
	print GREEN "Retype new LDAP password:";
	ReadMode('noecho');
	my $p2 = ReadLine(0);
	ReadMode('normal');
        chomp($p2);
        print "\n";

	# check if user entered the same password twice
	if ($p ne $p2) {
		print "Sorry, passwords do not match.\n";
		exit(1);
	}
	# check if new password is equal to the old password
	if ($p eq $oldpassword) {
		print "Sorry, current and new passwords are identical.\n";
		exit(1);
	}
	# enable additional checks here

	# re-bind with user credentials, just to be sure
	$ldap->bind($u, password => $oldpassword);

        # change user pass
        my $result = $ldap->modify($u,replace => { 'userPassword' => "{MD5}".md5_base64($p)."==" });
	if ($result->code) {
		print "chpass: an error occurred.\n";
		print ldap_error_text($result->code)."\n";
		exit(1);
	} else {
		print "chpass: password updated successfully\n";
	}
}

sub main() {
	print "Changing password for $user (dn:".get_dn.").\n";
	chk_oldpass;
	ch_pass;
	exit(0);
}

&main();
